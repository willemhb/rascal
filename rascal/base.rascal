module Math do
    # Rascal math standard library. Mostly for experimenting with syntax right now.

    struct Ratio do
        numer
        denom
    end

    some_list  = ["a string", :a_symbol]
    some_tuple = (:some, :tuple)
    some_map   = {x: 1, y: 2, z: 3}
    some_bits  = <<000, 000, 120, 037>>

    fun add(x, y), do: x + y

    fun even?(n) do
        # Test for even-ness.
        integer?(n) and n % 2 == 0
    end

    fun odd?(n) do
        # Test for odd-ness.
        integer?(n) and n % 2 == 1
    end

    fun pow(x, n) do
        # Standard fast power algorithm.
        fun loop(x, n, acc) do
            cond do
                n == 0    -> acc
                even?(n)  -> loop(x*x, n/2, acc)
                otherwise -> loop(x, n-1, x*acc)
            end
        end
        loop(x, n, 1)
    end
end

use Math

Math.pow(2, 5) # 32
