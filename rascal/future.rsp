;;; begin future.rsp
;;; examples of the syntax desired for an early release version
;;; of rascal.

(data slice
  "Reprsentation of a sequence segment."
      (int start)
      (int stop)
      (int step))

(fun slice
  (start)
    (slice start -1)
  (start stop)
    (slice start stop 1))

(class (seq xs[a])
  "A class for types representing ordered collections."
  (fun (?|a fst) (xs))
  (fun (?|xs rst) (xs)))

(class (eq x)
  "A class for comparable items."
  (fun (bool =?) (x x)))

(class (ord (eq x))
  "A class for comparable, orderable items."
  (fun (bool <? (x x))))

(union list
  "Using the simple definition for now."
  (nil cons))

(impl (seq list)
  (fun fst (xs)
    "These are incredibly easy."
    (and xs (hd xs)))
  (fun rst (xs)
    "I mean look at this."
    (and xs (tl xs))))

(impl (seq str)
  (fun fst (xs)
    "Less trivial than above :(."
    (if (= xs "") ()
        (0 xs)))
  (fun rst (xs)
    "But still pretty simple."
    (if (= xs "") ()
        (:1 xs))))

;;; slicing syntax examples


;;; end future.rsp